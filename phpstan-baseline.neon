parameters:
	ignoreErrors:
		-
			message: "#^Call to function is_array\\(\\) with array will always evaluate to true\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Calculation/Calculation.php

		-
			message: "#^Call to function is_string\\(\\) with string will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Calculation.php

		-
			message: "#^Offset 'reference' might not exist on array\\|null\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Calculation.php

		-
			message: "#^Offset 'type' might not exist on array\\|null\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Calculation/Calculation.php

		-
			message: "#^Offset 'value' might not exist on array\\|null\\.$#"
			count: 7
			path: src/PhpSpreadsheet/Calculation/Calculation.php

		-
			message: "#^PHPDoc tag @var with type int is not subtype of native type int\\<48, 57\\>\\|int\\<256, 1048576\\>\\|numeric\\-string\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Calculation.php

		-
			message: "#^Parameter \\#1 \\.\\.\\.\\$arg1 of function max expects non\\-empty\\-array, list\\<\\(int\\|string\\)\\> given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Calculation.php

		-
			message: "#^Parameter \\#1 \\.\\.\\.\\$arg1 of function max expects non\\-empty\\-array, list\\<int\\> given\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Calculation/Calculation.php

		-
			message: "#^Parameter \\#1 \\.\\.\\.\\$arg1 of function max expects non\\-empty\\-array, list\\<string\\> given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Calculation.php

		-
			message: "#^Parameter \\#1 \\.\\.\\.\\$arg1 of function min expects non\\-empty\\-array, list\\<\\(int\\|string\\)\\> given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Calculation.php

		-
			message: "#^Parameter \\#1 \\.\\.\\.\\$arg1 of function min expects non\\-empty\\-array, list\\<int\\> given\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Calculation/Calculation.php

		-
			message: "#^Parameter \\#1 \\.\\.\\.\\$arg1 of function min expects non\\-empty\\-array, list\\<string\\> given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Calculation.php

		-
			message: "#^Offset 0 on non\\-empty\\-list\\<string\\> on left side of \\?\\? always exists and is not nullable\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Database/DatabaseAbstract.php

		-
			message: "#^Parameter &\\$year by\\-ref type of method PhpOffice\\\\PhpSpreadsheet\\\\Calculation\\\\DateTimeExcel\\\\Date\\:\\:adjustYearMonth\\(\\) expects int, float given\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Calculation/DateTimeExcel/Date.php

		-
			message: "#^Strict comparison using \\!\\=\\= between DateInterval and false will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/DateTimeExcel/Days.php

		-
			message: "#^Parameter &\\$testVal3 by\\-ref type of method PhpOffice\\\\PhpSpreadsheet\\\\Calculation\\\\DateTimeExcel\\\\Helpers\\:\\:adjustYear\\(\\) expects string, float\\|int given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/DateTimeExcel/Helpers.php

		-
			message: "#^Parameter &\\$hour by\\-ref type of method PhpOffice\\\\PhpSpreadsheet\\\\Calculation\\\\DateTimeExcel\\\\Time\\:\\:adjustMinute\\(\\) expects int, float given\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Calculation/DateTimeExcel/Time.php

		-
			message: "#^Parameter &\\$minute by\\-ref type of method PhpOffice\\\\PhpSpreadsheet\\\\Calculation\\\\DateTimeExcel\\\\Time\\:\\:adjustSecond\\(\\) expects int, float given\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Calculation/DateTimeExcel/Time.php

		-
			message: "#^Parameter &\\$operand by\\-ref type of method PhpOffice\\\\PhpSpreadsheet\\\\Calculation\\\\Engine\\\\FormattedNumber\\:\\:convertToNumberIfCurrency\\(\\) expects string, float given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Engine/FormattedNumber.php

		-
			message: "#^Parameter &\\$operand by\\-ref type of method PhpOffice\\\\PhpSpreadsheet\\\\Calculation\\\\Engine\\\\FormattedNumber\\:\\:convertToNumberIfNumeric\\(\\) expects string, float given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Engine/FormattedNumber.php

		-
			message: "#^Parameter &\\$operand by\\-ref type of method PhpOffice\\\\PhpSpreadsheet\\\\Calculation\\\\Engine\\\\FormattedNumber\\:\\:convertToNumberIfPercent\\(\\) expects string, float given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Engine/FormattedNumber.php

		-
			message: "#^Strict comparison using \\!\\=\\= between float and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Financial/CashFlow/Constant/Periodic.php

		-
			message: "#^Parameter \\#1 \\.\\.\\.\\$arg1 of function max expects non\\-empty\\-array, array given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Financial/CashFlow/Variable/NonPeriodic.php

		-
			message: "#^Parameter \\#1 \\.\\.\\.\\$arg1 of function min expects non\\-empty\\-array, array given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Financial/CashFlow/Variable/NonPeriodic.php

		-
			message: "#^Call to function is_array\\(\\) with array will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Information/Value.php

		-
			message: "#^Parameter \\#1 \\$array \\(list\\<mixed\\>\\) of array_values is already a list, call has no effect\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/LookupRef/Filter.php

		-
			message: "#^Offset float does not exist on non\\-empty\\-list\\<mixed\\>\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Statistical/Averages.php

		-
			message: "#^Call to function is_numeric\\(\\) with float\\|int\\|numeric\\-string will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Calculation/Statistical/Deviations.php

		-
			message: "#^Call to function is_float\\(\\) with float will always evaluate to true\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Calculation/Statistical/Distributions/GammaBase.php

		-
			message: "#^Offset float does not exist on non\\-empty\\-list\\<mixed\\>\\.$#"
			count: 4
			path: src/PhpSpreadsheet/Calculation/Statistical/Percentiles.php

		-
			message: "#^PHPDoc tag @var with type array is not subtype of native type list\\<mixed\\>\\|false\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Calculation/TextData/Text.php

		-
			message: "#^Call to function is_string\\(\\) with numeric\\-string\\|non\\-empty\\-string will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Cell/AddressHelper.php

		-
			message: "#^Strict comparison using \\!\\=\\= between int and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Cell/Coordinate.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Chart\\\\DataSeriesValues and null will always evaluate to true\\.$#"
			count: 3
			path: src/PhpSpreadsheet/Chart/DataSeries.php

		-
			message: "#^Parameter \\#1 \\.\\.\\.\\$arg1 of function max expects non\\-empty\\-array, array given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Helper/TextGrid.php

		-
			message: "#^Parameter \\#2 \\$contents of static method PhpOffice\\\\PhpSpreadsheet\\\\Reader\\\\Csv\\:\\:guessEncodingTestNoBom\\(\\) expects string, string\\|false given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Csv.php

		-
			message: "#^Call to function is_array\\(\\) with non\\-empty\\-list\\<string\\> will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Csv/Delimiter.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Reader\\\\IReadFilter and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Gnumeric.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\ColumnDimension and null will always evaluate to true\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Reader/Gnumeric.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\RowDimension and null will always evaluate to true\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Reader/Gnumeric.php

		-
			message: "#^Strict comparison using \\!\\=\\= between SimpleXMLElement and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Gnumeric.php

		-
			message: "#^Strict comparison using \\!\\=\\= between SimpleXMLElement and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Gnumeric/Properties.php

		-
			message: "#^Call to function is_string\\(\\) with string will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Html.php

		-
			message: "#^Offset 0 on non\\-empty\\-list\\<string\\> in isset\\(\\) always exists and is not nullable\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Html.php

		-
			message: "#^Parameter \\#4 \\$column of method PhpOffice\\\\PhpSpreadsheet\\\\Reader\\\\Html\\:\\:processDomElement\\(\\) expects string, float\\|int\\|string given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Html.php

		-
			message: "#^Parameter &\\$column by\\-ref type of method PhpOffice\\\\PhpSpreadsheet\\\\Reader\\\\Html\\:\\:processDomElementTable\\(\\) expects string, \\(float\\|int\\|string\\) given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Html.php

		-
			message: "#^Parameter &\\$column by\\-ref type of method PhpOffice\\\\PhpSpreadsheet\\\\Reader\\\\Html\\:\\:processDomElementThTd\\(\\) expects string, \\(float\\|int\\) given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Html.php

		-
			message: "#^Parameter &\\$column by\\-ref type of method PhpOffice\\\\PhpSpreadsheet\\\\Reader\\\\Html\\:\\:processDomElementThTd\\(\\) expects string, float\\|int\\|string given\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Reader/Html.php

		-
			message: "#^Method PhpOffice\\\\PhpSpreadsheet\\\\Reader\\\\Ods\\:\\:getXmlName\\(\\) is marked as impure but does not have any side effects\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Ods.php

		-
			message: "#^Strict comparison using \\!\\=\\= between DOMNodeList\\<DOMElement\\> and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Ods.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Reader\\\\IReadFilter and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Ods.php

		-
			message: "#^Strict comparison using \\!\\=\\= between string and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Ods.php

		-
			message: "#^Strict comparison using \\!\\=\\= between \\(float\\|int\\) and string will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Slk.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Reader\\\\IReadFilter and null will always evaluate to true\\.$#"
			count: 10
			path: src/PhpSpreadsheet/Reader/Xls.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Reader\\\\IReadFilter and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Xls/LoadSpreadsheet.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Reader\\\\IReadFilter and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Xlsx.php

		-
			message: "#^Strict comparison using \\!\\=\\= between SimpleXMLElement and false will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Xlsx.php

		-
			message: "#^Strict comparison using \\!\\=\\= between SimpleXMLElement and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Xlsx.php

		-
			message: "#^Strict comparison using \\!\\=\\= between mixed and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Xlsx.php

		-
			message: "#^Strict comparison using \\!\\=\\= between string and false will always evaluate to true\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Reader/Xlsx.php

		-
			message: "#^Strict comparison using \\!\\=\\= between SimpleXMLElement and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Xlsx/Hyperlinks.php

		-
			message: "#^Strict comparison using \\!\\=\\= between mixed and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Xlsx/WorkbookView.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Reader\\\\IReadFilter and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Reader/Xml.php

		-
			message: "#^Strict comparison using \\!\\=\\= between \\(float\\|int\\) and string will always evaluate to true\\.$#"
			count: 2
			path: src/PhpSpreadsheet/ReferenceHelper.php

		-
			message: "#^Static property PhpOffice\\\\PhpSpreadsheet\\\\Shared\\\\StringHelper\\:\\:\\$isIconvEnabled \\(bool\\|null\\) is never assigned null so it can be removed from the property type\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Shared/StringHelper.php

		-
			message: "#^Strict comparison using \\!\\=\\= between string and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Spreadsheet.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\Border and null will always evaluate to true\\.$#"
			count: 4
			path: src/PhpSpreadsheet/Style/ConditionalFormatting/StyleMerger.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\Borders and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Style/ConditionalFormatting/StyleMerger.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\Color and null will always evaluate to true\\.$#"
			count: 4
			path: src/PhpSpreadsheet/Style/ConditionalFormatting/StyleMerger.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\Fill and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Style/ConditionalFormatting/StyleMerger.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\Font and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Style/ConditionalFormatting/StyleMerger.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\NumberFormat and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Style/ConditionalFormatting/StyleMerger.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Cell\\\\Cell and null will always evaluate to true\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Style/Style.php

		-
			message: "#^Call to function is_callable\\(\\) with array\\{'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\AutoFilter', 'dynamicLastMonth'\\|'dynamicLastQuarter'\\|'dynamicLastWeek'\\|'dynamicLastYear'\\|'dynamicNextMonth'\\|'dynamicNextQuarter'\\|'dynamicNextWeek'\\|'dynamicNextYear'\\|'dynamicThisMonth'\\|'dynamicThisQuarter'\\|'dynamicThisWeek'\\|'dynamicThisYear'\\|'dynamicToday'\\|'dynamicTomorrow'\\|'dynamicYearToDate'\\|'dynamicYesterday'\\} will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Worksheet/AutoFilter.php

		-
			message: "#^Strict comparison using \\!\\=\\= between mixed and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Worksheet/AutoFilter.php

		-
			message: "#^Strict comparison using \\!\\=\\= between string and null will always evaluate to true\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Worksheet/AutoFilter.php

		-
			message: "#^Strict comparison using \\!\\=\\= between string and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Worksheet/AutoFilter/Column/Rule.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\AutoFilter and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Worksheet/AutoFit.php

		-
			message: "#^Instanceof between PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\Table\\\\Column and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\Table\\\\Column will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Worksheet/Table.php

		-
			message: "#^Strict comparison using \\!\\=\\= between string and null will always evaluate to true\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Worksheet/Table.php

		-
			message: "#^Instanceof between PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\Conditional and PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\Conditional will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Worksheet/Worksheet.php

		-
			message: "#^Instanceof between PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\AutoFilter and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\AutoFilter will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Worksheet/Worksheet.php

		-
			message: "#^Parameter &\\$hiddenColumns by\\-ref type of method PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\Worksheet\\:\\:buildNullRow\\(\\) expects array\\<string, bool\\>, array\\<bool\\> given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Worksheet/Worksheet.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Cell\\\\Cell and null will always evaluate to true\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Worksheet/Worksheet.php

		-
			message: "#^Strict comparison using \\!\\=\\= between string and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Worksheet/Worksheet.php

		-
			message: "#^Binary operation \"\\.\\=\" between array\\|string and non\\-falsy\\-string results in an error\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Writer/Html.php

		-
			message: "#^Instanceof between PhpOffice\\\\PhpSpreadsheet\\\\Chart\\\\Chart and PhpOffice\\\\PhpSpreadsheet\\\\Chart\\\\Chart will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Writer/Html.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\AutoFilter and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Writer/Ods/AutoFilters.php

		-
			message: "#^Strict comparison using \\!\\=\\= between int and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Writer/Ods/Content.php

		-
			message: "#^Parameter \\#1 \\$image of callable passed to call_user_func\\(\\) expects GdImage, GdImage\\|null given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Writer/Xls.php

		-
			message: "#^Static property PhpOffice\\\\PhpSpreadsheet\\\\Writer\\\\Xls\\\\BIFFwriter\\:\\:\\$byteOrder \\(int\\|null\\) is never assigned null so it can be removed from the property type\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Writer/Xls/BIFFwriter.php

		-
			message: "#^Call to function is_string\\(\\) with string will always evaluate to true\\.$#"
			count: 3
			path: src/PhpSpreadsheet/Writer/Xls/CellDataValidation.php

		-
			message: "#^PHPDoc tag @var with type float\\|int\\|string is not subtype of native type mixed\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Writer/Xls/ConditionalHelper.php

		-
			message: "#^Call to function is_string\\(\\) with string will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Writer/Xls/Style/CellBorder.php

		-
			message: "#^PHPDoc tag @var with type callable is not subtype of native type string\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Writer/Xlsx.php

		-
			message: "#^PHPDoc tag @var with type string is not subtype of native type non\\-empty\\-array\\|non\\-falsy\\-string\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Writer/Xlsx/Chart.php

		-
			message: "#^Parameter &\\$plotGroupingType by\\-ref type of method PhpOffice\\\\PhpSpreadsheet\\\\Writer\\\\Xlsx\\\\Chart\\:\\:writePlotGroup\\(\\) expects string, string\\|null given\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Writer/Xlsx/Chart.php

		-
			message: "#^Strict comparison using \\!\\=\\= between array\\|PhpOffice\\\\PhpSpreadsheet\\\\RichText\\\\RichText\\|string and null will always evaluate to true\\.$#"
			count: 3
			path: src/PhpSpreadsheet/Writer/Xlsx/Chart.php

		-
			message: "#^Call to function is_array\\(\\) with array\\<string\\> will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Writer/Xlsx/StringTable.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\RichText\\\\RichText and null will always evaluate to true\\.$#"
			count: 1
			path: src/PhpSpreadsheet/Writer/Xlsx/StringTable.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\ConditionalFormatting\\\\ConditionalFormatValueObject and null will always evaluate to true\\.$#"
			count: 2
			path: src/PhpSpreadsheet/Writer/Xlsx/Worksheet.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertIsArray\\(\\) with array\\<string\\> will always evaluate to true\\.$#"
			count: 4
			path: tests/PhpSpreadsheetTests/Calculation/CalculationLoggingTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertTrue\\(\\) with true will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Calculation/CalculationTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertTrue\\(\\) with true will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Calculation/DefinedNameConfusedForCellTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertSame\\(\\) with float and string will always evaluate to false\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Calculation/Engine/FormattedNumberSlashTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertSame\\(\\) with float and string will always evaluate to false\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Calculation/Engine/FormattedNumberTest.php

		-
			message: "#^Parameter \\#1 \\$callback of function array_map expects \\(callable\\(mixed\\)\\: mixed\\)\\|null, array\\{'PhpOffice\\\\\\\\PhpSpreadsheetTests\\\\\\\\Calculation\\\\\\\\Functions\\\\\\\\FormulaArguments', 'stringify'\\} given\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Calculation/Functions/FormulaArguments.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertIsArray\\(\\) with array\\<string, int\\> will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Cell/DataTypeTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Cell\\\\\\\\Hyperlink' and PhpOffice\\\\PhpSpreadsheet\\\\Cell\\\\Hyperlink will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Cell/HyperlinkTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertNotNull\\(\\) with PhpOffice\\\\PhpSpreadsheet\\\\Chart\\\\DataSeries will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Chart/DataSeriesValues2Test.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Chart\\\\\\\\DataSeriesValues' and PhpOffice\\\\PhpSpreadsheet\\\\Chart\\\\DataSeriesValues will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Chart/DataSeriesValuesTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Chart\\\\\\\\Layout' and PhpOffice\\\\PhpSpreadsheet\\\\Chart\\\\Layout will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Chart/LayoutTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertNotNull\\(\\) with PhpOffice\\\\PhpSpreadsheet\\\\Chart\\\\Axis will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Chart/PR3163Test.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertNotNull\\(\\) with PhpOffice\\\\PhpSpreadsheet\\\\Chart\\\\PlotArea will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Chart/PlotAreaTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\RichText\\\\\\\\RichText' and PhpOffice\\\\PhpSpreadsheet\\\\RichText\\\\RichText will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/CommentTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Style\\\\\\\\Color' and PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\Color will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/CommentTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\NamedRange' and PhpOffice\\\\PhpSpreadsheet\\\\NamedRange will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/DefinedNameTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertNotEmpty\\(\\) with 'docs/references/' will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/DocumentGeneratorTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\ColumnDimension' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\ColumnDimension will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Functional/ColumnWidthTest.php

		-
			message: "#^PHPDoc tag @var with type callable\\(\\)\\: mixed is not subtype of native type array\\{'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Helper\\\\\\\\Html', 'breakTag'\\}\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Helper/HtmlTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertTrue\\(\\) with true will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Helper/SampleTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Spreadsheet' and PhpOffice\\\\PhpSpreadsheet\\\\Spreadsheet will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/IOFactoryTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertTrue\\(\\) with true will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Reader/Html/HtmlLoadStringTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertNotNull\\(\\) with PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\ColumnDimension will always evaluate to true\\.$#"
			count: 3
			path: tests/PhpSpreadsheetTests/Reader/Html/HtmlTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertNotNull\\(\\) with PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\RowDimension will always evaluate to true\\.$#"
			count: 3
			path: tests/PhpSpreadsheetTests/Reader/Html/HtmlTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertIsArray\\(\\) with array\\<string\\> will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Reader/Ods/OdsPropertiesTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice…' and PhpOffice\\\\PhpSpreadsheet\\\\Spreadsheet will always evaluate to true\\.$#"
			count: 3
			path: tests/PhpSpreadsheetTests/Reader/Ods/OdsTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice…' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\Worksheet will always evaluate to true\\.$#"
			count: 6
			path: tests/PhpSpreadsheetTests/Reader/Ods/OdsTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Reader\\\\\\\\Security\\\\\\\\XmlScanner' and PhpOffice\\\\PhpSpreadsheet\\\\Reader\\\\Security\\\\XmlScanner will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Reader/Security/XmlScannerTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertIsArray\\(\\) with array will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Reader/Xlsx/AbsolutePathTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertNotNull\\(\\) with PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\ConditionalFormatting\\\\ConditionalDataBar will always evaluate to true\\.$#"
			count: 5
			path: tests/PhpSpreadsheetTests/Reader/Xlsx/ConditionalFormattingDataBarXlsxTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertNotNull\\(\\) with PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\ConditionalFormatting\\\\ConditionalFormattingRuleExtension will always evaluate to true\\.$#"
			count: 4
			path: tests/PhpSpreadsheetTests/Reader/Xlsx/ConditionalFormattingDataBarXlsxTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertIsArray\\(\\) with array\\<string\\> will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Reader/Xlsx/PropertiesTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertTrue\\(\\) with true will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Reader/Xlsx/VmlTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Style\\\\\\\\Style' and PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\Style will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Reader/Xlsx/XlsxTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\AutoFilter' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\AutoFilter will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Reader/Xlsx/XlsxTest.php

		-
			message: "#^Expression \"clone \\$referenceHelper\" on a separate line does not do anything\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/ReferenceHelper2Test.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertNotNull\\(\\) with PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\Font will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/RichTextTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertNotNull\\(\\) with Psr\\\\SimpleCache\\\\CacheInterface will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/SettingsTest.php

		-
			message: "#^Call to function is_numeric\\(\\) with float\\|int will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Shared/DateTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertNotNull\\(\\) with PhpOffice\\\\PhpSpreadsheet\\\\Cell\\\\Cell will always evaluate to true\\.$#"
			count: 4
			path: tests/PhpSpreadsheetTests/Shared/DateTest.php

		-
			message: "#^Strict comparison using \\!\\=\\= between null and PhpOffice\\\\PhpSpreadsheet\\\\Cell\\\\Cell will always evaluate to true\\.$#"
			count: 3
			path: tests/PhpSpreadsheetTests/Shared/DateTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertTrue\\(\\) with true will always evaluate to true\\.$#"
			count: 6
			path: tests/PhpSpreadsheetTests/Shared/ExactFontTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Style\\\\\\\\ConditionalFormatting\\\\\\\\Wizard\\\\\\\\Blanks' and PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\ConditionalFormatting\\\\Wizard\\\\Blanks will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Style/ConditionalFormatting/Wizard/BlankWizardTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Style\\\\\\\\ConditionalFormatting\\\\\\\\Wizard\\\\\\\\Duplicates' and PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\ConditionalFormatting\\\\Wizard\\\\Duplicates will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Style/ConditionalFormatting/Wizard/DuplicatesWizardTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Style\\\\\\\\ConditionalFormatting\\\\\\\\Wizard\\\\\\\\Errors' and PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\ConditionalFormatting\\\\Wizard\\\\Errors will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Style/ConditionalFormatting/Wizard/ErrorWizardTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Style\\\\\\\\ConditionalFormatting\\\\\\\\Wizard\\\\\\\\TextValue' and PhpOffice\\\\PhpSpreadsheet\\\\Style\\\\ConditionalFormatting\\\\Wizard\\\\TextValue will always evaluate to true\\.$#"
			count: 5
			path: tests/PhpSpreadsheetTests/Style/ConditionalFormatting/Wizard/TextValueWizardTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\AutoFilter' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\AutoFilter will always evaluate to true\\.$#"
			count: 8
			path: tests/PhpSpreadsheetTests/Worksheet/AutoFilter/AutoFilterTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\AutoFilter\\\\\\\\Column' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\AutoFilter\\\\Column will always evaluate to true\\.$#"
			count: 10
			path: tests/PhpSpreadsheetTests/Worksheet/AutoFilter/AutoFilterTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\Worksheet' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\Worksheet will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Worksheet/AutoFilter/AutoFilterTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertIsArray\\(\\) with array\\<PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\AutoFilter\\\\Column\\> will always evaluate to true\\.$#"
			count: 8
			path: tests/PhpSpreadsheetTests/Worksheet/AutoFilter/AutoFilterTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\AutoFilter\\\\\\\\Column' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\AutoFilter\\\\Column will always evaluate to true\\.$#"
			count: 6
			path: tests/PhpSpreadsheetTests/Worksheet/AutoFilter/ColumnTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\AutoFilter\\\\\\\\Column\\\\\\\\Rule' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\AutoFilter\\\\Column\\\\Rule will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Worksheet/AutoFilter/ColumnTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Comment' and PhpOffice\\\\PhpSpreadsheet\\\\Comment will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Worksheet/ByColumnAndRowTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\AutoFilter' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\AutoFilter will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Worksheet/ByColumnAndRowTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Comment' and PhpOffice\\\\PhpSpreadsheet\\\\Comment will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Worksheet/ByColumnAndRowUndeprecatedTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\AutoFilter' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\AutoFilter will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Worksheet/ByColumnAndRowUndeprecatedTest.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Cell\\\\Cell and null will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Worksheet/ColumnCellIterator2Test.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Cell\\\\\\\\Cell' and PhpOffice\\\\PhpSpreadsheet\\\\Cell\\\\Cell will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Worksheet/ColumnCellIteratorTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertNotNull\\(\\) with PhpOffice\\\\PhpSpreadsheet\\\\Cell\\\\Cell will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Worksheet/ColumnCellIteratorTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\ColumnDimension' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\ColumnDimension will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Worksheet/ColumnDimensionTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\Column' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\Column will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Worksheet/ColumnIteratorTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\Column' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\Column will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Worksheet/ColumnTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\ColumnCellIterator' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\ColumnCellIterator will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Worksheet/ColumnTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\Worksheet' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\Worksheet will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Worksheet/IteratorTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'GdImage' and GdImage will always evaluate to true\\.$#"
			count: 3
			path: tests/PhpSpreadsheetTests/Worksheet/MemoryDrawingTest.php

		-
			message: "#^Strict comparison using \\!\\=\\= between PhpOffice\\\\PhpSpreadsheet\\\\Cell\\\\Cell and null will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Worksheet/RowCellIterator2Test.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Cell\\\\\\\\Cell' and PhpOffice\\\\PhpSpreadsheet\\\\Cell\\\\Cell will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Worksheet/RowCellIteratorTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertNotNull\\(\\) with PhpOffice\\\\PhpSpreadsheet\\\\Cell\\\\Cell will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Worksheet/RowCellIteratorTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\RowDimension' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\RowDimension will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Worksheet/RowDimensionTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\Row' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\Row will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Worksheet/RowIteratorTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\Row' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\Row will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Worksheet/RowTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\RowCellIterator' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\RowCellIterator will always evaluate to true\\.$#"
			count: 2
			path: tests/PhpSpreadsheetTests/Worksheet/RowTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\Table\\\\\\\\Column' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\Table\\\\Column will always evaluate to true\\.$#"
			count: 5
			path: tests/PhpSpreadsheetTests/Worksheet/Table/ColumnTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\Table\\\\\\\\TableStyle' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\Table\\\\TableStyle will always evaluate to true\\.$#"
			count: 5
			path: tests/PhpSpreadsheetTests/Worksheet/Table/TableStyleTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\Table' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\Table will always evaluate to true\\.$#"
			count: 11
			path: tests/PhpSpreadsheetTests/Worksheet/Table/TableTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\Table\\\\\\\\Column' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\Table\\\\Column will always evaluate to true\\.$#"
			count: 10
			path: tests/PhpSpreadsheetTests/Worksheet/Table/TableTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpOffice\\\\\\\\PhpSpreadsheet\\\\\\\\Worksheet\\\\\\\\Worksheet' and PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\Worksheet will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Worksheet/Table/TableTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertIsArray\\(\\) with array\\<PhpOffice\\\\PhpSpreadsheet\\\\Worksheet\\\\Table\\\\Column\\> will always evaluate to true\\.$#"
			count: 8
			path: tests/PhpSpreadsheetTests/Worksheet/Table/TableTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertEmpty\\(\\) with null will always evaluate to true\\.$#"
			count: 1
			path: tests/PhpSpreadsheetTests/Worksheet/Worksheet2Test.php
